#!/bin/bash

# COLOR
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'


#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /etc/xray/isp)
CITY=$(cat /etc/xray/city)
IPVPS=$(curl -s ipv4.icanhazip.com)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")

DATEVPS=$(date +'%d/%m/%Y')
TIMEZONE=$(printf '%(%H:%M:%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)

# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
}

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"
WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipinfo.io/ip )
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )

ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)

#Status | Geo Project
clear

# STATUS SERVICE  SSH 
if [[ $ssh_service == "running" ]]; then 
   status_ssh="${green}On ✓${NC}"
else
   status_ssh="${z}🔴${NC} "
fi

# // SSH Websocket Proxy
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="${green}On ✓${NC}"
else
    status_ws_epro="${z}🔴${NC} "
fi

# STATUS SERVICE HAPROXY
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="${green}On ✓${NC}"
else
   status_haproxy="${z}🔴${NC} "
fi

# STATUS SERVICE XRAY
if [[ $xray_service == "running" ]]; then 
   status_xray="${green}On ✓${NC}"
else
   status_xray="${z}🔴${NC} "
fi

# STATUS SERVICE NGINX
if [[ $nginx_service == "running" ]]; then 
   status_nginx="${green}On ✓${NC}"
else
   status_nginx="${z}🔴${NC} "
fi

# STATUS SERVICE Dropbear
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="${green}On ✓${NC}"
else
   status_dropbear="${z}🔴${NC} "
fi

#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trj=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
###########

echo -e "\033[1m"
echo -e "╭══════════════════════════════════════════════════════════╮"
echo -e "│   Information VPS Server          "
echo -e "│══════════════════════════════════════════════════════════╯"
echo -e "│ ● System OS     = $MODEL "
echo -e "│ ● Core System   = $CORE "
echo -e "│ ● Server RAM    = $RAM MB "
echo -e "│ ● Uptime Server = $SERONLINE "
echo -e "│ ● Domain        = $domain "
echo -e "│ ● IP VPS        = $IPVPS  "
echo -e "│ ● Uptime Server = $SERONLINE "                                                            
echo -e "│ ● Date          = $DATEVPS  "
echo -e "│ ● Time          = $TIMEZONE "
echo -e "│ "
echo -e "╰══════════════════════════════════════════════════════════╯"
echo -e "\033[1m"
echo -e "╭══════════════════════════════════════════════════════════╮"
echo -e "│   Running Service Account      "
echo -e "│══════════════════════════════════════════════════════════╯"
echo -e "│ ● SSH/OPENVPN = $ssh1  account "
echo -e "│ ● VMESS       = $vma  account "
echo -e "│ ● VLESS       = $vla  account "
echo -e "│ ● TROJAN      = $trj  account "
echo -e "│ ● SHADOWSOCKS = $ssa  account "
echo -e "│ ● SLOWDNS     = 0  account    "
echo -e "│ "
echo -e "╰══════════════════════════════════════════════════════════╯"
echo -e "\033[1m"
echo -e "╭══════════════════════════════════════════════════════════╮"
echo -e "│   Running System Server        "
echo -e "│══════════════════════════════════════════════════════════╯"
echo -e "│ ● SSH      : $status_ssh      "
echo -e "│ ● WS       : $status_ws_epro  "
echo -e "│ ● NGINX    : $status_nginx    "
echo -e "│ ● DROPBEAR : $status_dropbear "
echo -e "│ ● XRAY     : $status_xray     "
echo -e "│ ● HAPROXY  : $status_haproxy  "
echo -e "│ "
echo -e "╰══════════════════════════════════════════════════════════╯"
echo -e "\033[1m"
echo -e "╭══════════════════════════════════════════════════════════╮"
echo -e "│        Create Account          "
echo -e "│══════════════════════════════════════════════════════════╯"
echo -e "│ 01. SSH/OPENVPN                "
echo -e "│ 02. VMESS                      "
echo -e "│ 03. VLESS                      "
echo -e "│ 04. TROJAN                     "
echo -e "│ 05. SHADOWSOCKS                "
echo -e "│ 06. SLOWDNS                    "
echo -e "│ 07. Setting Developer          "
echo -e "│ 08. Bandwith                   "
echo -e "│ 09. Speedtest                  "
echo -e "│ 10. Limit-Speed                "
echo -e "│ 11. Backup & Restore           "
echo -e "│ "
echo -e "╰══════════════════════════════════════════════════════════╯"

echo -e "\033[1m"
read -p " Select menu { 1-11 } : " opt
echo -e ""
case $opt in
1)
clear
m-sshws
;;
2)
clear
m-vmess
;;
3)
clear
m-vless
;;
4)
clear
m-trojan
;;
5)
clear
m-ssws
;;
6)
clear
m-slowdns
;;
7)
clear
utility
;;
8)
clear
bw
;;
9)
clear
speedtest
;;
10)
clear
limitspeed
;;
11)
clear
menu-backup
;;
*)
clear
menu
;;
esac
